---
stages:
  - build
  - test
  - deploy

.kaniko: &kaniko
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  cache:
    key: docker
  stage: build
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - echo "Working around https://github.com/GoogleContainerTools/kaniko/issues/595"
    - rm -f .dockerignore

.rust: &rust
  cache: &rust-cache
    paths:
      - target/
      - $CARGO_HOME/bin/
      - $CARGO_HOME/registry/index/
      - $CARGO_HOME/registry/cache/
      - $CARGO_HOME/git/db/

.rust-stable: &rust-stable
  <<: *rust
  image: rust
  cache:
    <<: *rust-cache
    key: rust-stable

.rust-nightly: &rust-nightly
  <<: *rust
  image: rustlang/rust:nightly
  cache:
    <<: *rust-cache
    key: rust-nightly

.build:host:stable:
  <<: *rust-stable
  stage: build
  needs: []
  script:
    - cargo build
    - cargo build --release

build:docker:client:
  <<: *kaniko
  stage: build
  only:
    - branches
  script:
    - >
        /kaniko/executor --context $CI_PROJECT_DIR/flickrs-client
        --dockerfile $CI_PROJECT_DIR/flickrs-client/Dockerfile
        --destination $CI_REGISTRY_IMAGE/nginx-static:$CI_COMMIT_REF_SLUG
        --cache=true

build:docker:apiserver:
  <<: *kaniko
  stage: build
  only:
    - branches
  script:
    - >
        /kaniko/executor --context $CI_PROJECT_DIR/flickrs-server
        --dockerfile $CI_PROJECT_DIR/flickrs-server/Dockerfile
        --destination $CI_REGISTRY_IMAGE/apiserver:$CI_COMMIT_REF_SLUG
        --cache=true

build:host:nightly:
  <<: *rust-nightly
  stage: build
  needs: []
  script:
    - cargo build
    - cargo build --release

build:host:nightly:docs:
  <<: *rust-nightly
  stage: build
  needs: []
  script:
    - cargo doc --no-deps --workspace --document-private-items
  artifacts:
    paths:
      - target/doc

.test:stable:
  <<: *rust-stable
  stage: test
  needs: []
  script:
    - cargo test
    - cargo test --release

test:nightly:
  <<: *rust-nightly
  stage: test
  needs: []
  script:
    - cargo test
    - cargo test --release

fmt:nightly:
  <<: *rust-nightly
  stage: test
  needs: []
  script:
    - cargo fmt -- --check

coverage:nightly:
  <<: *rust-nightly
  image: xd009642/tarpaulin:develop-nightly
  stage: test
  needs: []
  script:
    - export PATH="$CARGO_HOME/bin:$PATH"
    - cargo tarpaulin -v --exclude-files cargo/*

clippy:
  <<: *rust-nightly
  stage: test
  needs: []
  allow_failure: true
  script:
    - rustup component add clippy
    - cargo clippy

pages:
  dependencies:
    - build:host:nightly:docs
  needs:
    - build:host:nightly:docs
  stage: deploy
  only:
    - master
  script:
    - mkdir -p public
    - mv target/doc public/
  artifacts:
    paths:
      - public

deploy:k8s:
  image: devth/helm
  dependencies:
    - build:docker:client
    - build:docker:apiserver
  needs:
    - build:docker:client
    - build:docker:apiserver
  stage: deploy
  only:
    - master
  before_script:
    - .ci/kube-login.sh
  script:
    - kubectl -n $NAMESPACE apply -f flickrs-k8s.yaml
    - kubectl -n $NAMESPACE rollout restart deployment.apps/flickrs-api
    - kubectl -n $NAMESPACE rollout restart deployment.apps/flickrs-static
    - kubectl -n $NAMESPACE rollout restart deployment.apps/flickrs-virtual-host
